{"version":3,"sources":["WordCard.js","DictionaryApp.js","App.js","index.js"],"names":["WordCard","item","className","partOfSpeech","definition","examples","DictionaryApp","useState","query","setQuery","result","setResult","handleSubmit","e","preventDefault","options","method","url","headers","axios","request","then","response","data","console","log","catch","error","searchWord","onSubmit","type","placeholder","value","onChange","target","onClick","params","random","Object","keys","length","word","results","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAceA,MAZf,YAA6B,IAATC,EAAQ,EAARA,KAChB,OACI,sBAAKC,UAAU,WAAf,UAEI,4CACA,kCAAKD,EAAKE,aAAV,OACA,4BAAIF,EAAKG,aACRH,EAAKI,UAAY,qCAAQJ,EAAKI,gBCyE5BC,MA7Ef,WAA0B,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEOF,mBAAS,IAFhB,mBAEdG,EAFc,KAENC,EAFM,KA4CrB,SAASC,EAAaC,GAClBA,EAAEC,iBACW,KAAVN,GArBP,WACIG,EAAU,IACV,IAAMI,EAAU,CACZC,OAAQ,MACRC,IAAI,2CAAD,OAA6CT,GAChDU,QAAS,CACT,iBAAkB,qDAClB,kBAAmB,8BAIvBC,IAAMC,QAAQL,GAASM,MAAK,SAAUC,GAClCX,EAAUW,EAASC,MACnBC,QAAQC,IAAIH,EAASC,SACtBG,OAAM,SAAUC,GACfH,QAAQG,MAAMA,MAOdC,GAEJnB,EAAS,IAGb,OACI,qCACI,yBAAQP,UAAU,SAAlB,UACI,oBAAIA,UAAU,QAAd,wBACA,uBAAMA,UAAU,OAAO2B,SAAU,SAAAhB,GAAC,OAAID,EAAaC,IAAnD,UACI,uBACIiB,KAAK,OACLC,YAAY,kBACZC,MAAOxB,EACPyB,SAAU,SAAApB,GAAC,OAAIJ,EAASI,EAAEqB,OAAOF,UAErC,4CACA,wBAAQG,QAAS,kBA1D7BxB,EAAU,SAWVQ,IAAMC,QAVU,CACZJ,OAAQ,MACRC,IAAK,2CACLmB,OAAQ,CAACC,OAAQ,QACjBnB,QAAS,CACT,iBAAkB,qDAClB,kBAAmB,+BAIAG,MAAK,SAAUC,GAClCX,EAAUW,EAASC,MACnBC,QAAQC,IAAIH,EAASC,SACtBG,OAAM,SAAUC,GACfH,QAAQG,MAAMA,OA2CN,gCAG4B,IAA/BW,OAAOC,KAAK7B,GAAQ8B,OACjB,gCACI,oBAAItC,UAAU,OAAd,SAAsBQ,EAAO+B,OAC5B/B,EAAOgC,QAAQC,KAAI,SAAA1C,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,UAElD,yDCjEH2C,MARf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,cAAC,EAAD,OCFN2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33584542.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction WordCard({ item }) {\r\n    return (\r\n        <div className=\"wordCard\">\r\n            \r\n            <b>Definition:</b>\r\n            <i>({item.partOfSpeech})</i>\r\n            <p>{item.definition}</p>\r\n            {item.examples && <p>i.e {item.examples}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordCard\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport './DictionaryApp.css'\r\nimport WordCard from './WordCard'\r\n\r\nfunction DictionaryApp() {\r\n    const [query, setQuery] = useState('')\r\n    const [result, setResult] = useState({})\r\n\r\n    function randomWord(e){\r\n       \r\n        setResult({})\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://wordsapiv1.p.rapidapi.com/words/',\r\n            params: {random: 'true'},\r\n            headers: {\r\n            'x-rapidapi-key': '16ef5195ddmsha395af9aa747e37p1b4648jsnba14058d3035',\r\n            'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com'\r\n            }\r\n        };\r\n        \r\n        axios.request(options).then(function (response) {\r\n            setResult(response.data)\r\n            console.log(response.data);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    function searchWord(){\r\n        setResult({})\r\n        const options = {\r\n            method: 'GET',\r\n            url: `https://wordsapiv1.p.rapidapi.com/words/${query}`,\r\n            headers: {\r\n            'x-rapidapi-key': '0229cd0a5dmshd08364def2b9ecep191a40jsn75fc550981c7',\r\n            'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com'\r\n            }\r\n        };\r\n        \r\n        axios.request(options).then(function (response) {\r\n            setResult(response.data)\r\n            console.log(response.data);\r\n        }).catch(function (error) {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if(query !== ''){\r\n            searchWord()\r\n        }  \r\n        setQuery('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <h1 className='title'>Dictionary</h1>\r\n                <form className='form' onSubmit={e => handleSubmit(e)}>\r\n                    <input  \r\n                        type='text' \r\n                        placeholder='Enter a word...' \r\n                        value={query}\r\n                        onChange={e => setQuery(e.target.value)}\r\n                    />\r\n                    <button>Search</button>\r\n                    <button onClick={() => randomWord()}>Random Word!</button>\r\n                </form>\r\n            </header>\r\n                {Object.keys(result).length !== 0 ? \r\n                    <div>\r\n                        <h2 className=\"word\">{result.word}</h2>\r\n                        {result.results.map(item => <WordCard item={item} />)}\r\n                    </div> \r\n                : <p>Please Search a Word</p>} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DictionaryApp\r\n","\nimport './App.css';\nimport DictionaryApp from './DictionaryApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DictionaryApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}