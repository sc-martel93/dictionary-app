{"version":3,"sources":["WordCard.js","DictionaryApp.js","App.js","index.js"],"names":["WordCard","item","className","word","partOfSpeech","definition","examples","DictionaryApp","useState","query","setQuery","result","setResult","options","setOptions","handleSubmit","e","preventDefault","method","url","headers","process","useEffect","axios","request","then","response","data","catch","error","console","onSubmit","type","placeholder","value","onChange","target","onClick","params","random","Object","keys","length","undefined","results","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAceA,MAZf,YAA6B,IAATC,EAAQ,EAARA,KAChB,OACI,sBAAKC,UAAU,WAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBD,EAAKE,OAC3B,4CACA,kCAAKF,EAAKG,aAAV,OACA,4BAAIH,EAAKI,aACRJ,EAAKK,UAAY,qCAAQL,EAAKK,gBC6E5BC,MAjFf,WAA0B,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEOF,mBAAS,IAFhB,mBAEdG,EAFc,KAENC,EAFM,OAGSJ,mBAAS,IAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAyCrB,SAASC,EAAaC,GAClBA,EAAEC,iBACY,KAAVR,GAxBJK,EAAW,CACPI,OAAQ,MACRC,IAAI,2CAAD,OAA6CV,GAChDW,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,+BAsB3BX,EAAS,IAUb,OA1BAY,qBAAU,WACNC,IAAMC,QAAQX,GAASY,MAAK,SAACC,GACzBd,EAAUc,EAASC,SAEpBC,OAAM,SAACC,GACNC,QAAQD,MAAMA,QAEnB,CAAChB,IAoBA,qCACI,yBAAQX,UAAU,SAAlB,UACI,oBAAIA,UAAU,QAAd,wBACA,uBAAMA,UAAU,OAAO6B,SAAU,SAAAf,GAAC,OAAID,EAAaC,IAAnD,UACI,uBACIgB,KAAK,OACLC,YAAY,kBACZC,MAAOzB,EACP0B,SAAU,SAAAnB,GAAC,OAAIN,EAASM,EAAEoB,OAAOF,UAErC,4CACA,wBAAQG,QAAS,WA9D7BvB,EAAW,CACPI,OAAQ,MACRC,IAAK,2CACLmB,OAAQ,CAAEC,OAAQ,QAClBnB,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,gCAwDf,gCAGPmB,OAAOC,KAAK9B,GAAQ+B,OAAS,EAC1B,gCACI,oBAAIxC,UAAU,OAAd,SAAsBS,EAAOR,YAvBlBwC,IAAnBhC,EAAOiC,QAA8B,8CAElCjC,EAAOiC,QAAQC,KAAI,SAAA5C,GAAI,OAAI,cAAC,EAAD,CAAUA,KAAMA,UAwBxC,yDCrEH6C,MARf,WACE,OACE,qBAAK5C,UAAU,MAAf,SACE,cAAC,EAAD,OCFN6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.adf22700.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction WordCard({ item }) {\r\n    return (\r\n        <div className=\"wordCard\">\r\n            <h2 className=\"word\">{item.word}</h2>\r\n            <b>Definition:</b>\r\n            <i>({item.partOfSpeech})</i>\r\n            <p>{item.definition}</p>\r\n            {item.examples && <p>i.e {item.examples}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './DictionaryApp.css'\r\nimport WordCard from './WordCard'\r\n\r\nfunction DictionaryApp() {\r\n    const [query, setQuery] = useState('')\r\n    const [result, setResult] = useState({})\r\n    const [options, setOptions] = useState({})\r\n\r\n    function randomWord(e) {\r\n        setOptions({\r\n            method: 'GET',\r\n            url: 'https://wordsapiv1.p.rapidapi.com/words/',\r\n            params: { random: 'true' },\r\n            headers: {\r\n                'x-rapidapi-key': process.env.REACT_APP_PUBLIC_KEY,\r\n                'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com'\r\n            }\r\n        });\r\n    }\r\n    // 16ef5195ddmsha395af9aa747e37p1b4648jsnba14058d3035\r\n\r\n    function searchWord() {\r\n        setOptions({\r\n            method: 'GET',\r\n            url: `https://wordsapiv1.p.rapidapi.com/words/${query}`,\r\n            headers: {\r\n                'x-rapidapi-key': process.env.REACT_APP_PUBLIC_KEY,\r\n                'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com'\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.request(options).then((response) => {\r\n            setResult(response.data)\r\n            // console.log(response.data)\r\n        }).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }, [options]);\r\n\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (query !== '') {\r\n            searchWord()\r\n        }\r\n        setQuery('')\r\n    }\r\n\r\n    function setDisplay() {\r\n        if (result.results === undefined) return <p>No Definition</p>\r\n\r\n        return result.results.map(item => <WordCard item={item} />)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <h1 className='title'>Dictionary</h1>\r\n                <form className='form' onSubmit={e => handleSubmit(e)}>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Enter a word...'\r\n                        value={query}\r\n                        onChange={e => setQuery(e.target.value)}\r\n                    />\r\n                    <button>Search</button>\r\n                    <button onClick={() => randomWord()}>Random Word!</button>\r\n                </form>\r\n            </header>\r\n            {Object.keys(result).length > 0 ?\r\n                <div>\r\n                    <h2 className=\"word\">{result.word}</h2>\r\n                    {setDisplay()}\r\n                </div>\r\n                : <p>Please Search a Word</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DictionaryApp\r\n","\nimport './App.css';\nimport DictionaryApp from './DictionaryApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DictionaryApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}